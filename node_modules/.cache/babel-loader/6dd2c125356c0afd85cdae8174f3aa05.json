{"ast":null,"code":"import _classCallCheck from\"/Users/cj/fork-u/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/cj/fork-u/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/cj/fork-u/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/cj/fork-u/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"/Users/cj/fork-u/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/cj/fork-u/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import Firebase from'firebase';var Login=/*#__PURE__*/function(_React$Component){_inherits(Login,_React$Component);function Login(props){var _this;_classCallCheck(this,Login);_this=_possibleConstructorReturn(this,_getPrototypeOf(Login).call(this,props));_this.state={username:'',password:'',isNew:false};_this.handleChangeUsername=_this.handleChangeUsername.bind(_assertThisInitialized(_this));_this.handleChangePassword=_this.handleChangePassword.bind(_assertThisInitialized(_this));_this.handleSubmit=_this.handleSubmit.bind(_assertThisInitialized(_this));return _this;}_createClass(Login,[{key:\"handleChangeUsername\",value:function handleChangeUsername(event){this.setState({username:event.target.value});}},{key:\"handleChangePassword\",value:function handleChangePassword(event){this.setState({password:event.target.value});}},{key:\"handleSubmit\",value:function handleSubmit(event){var provider=new Firebase.auth.GoogleAuthProvider();alert(\"Test\");Firebase.auth().signInWithPopup(provider).then(function(result){// This gives you a Google Access Token. You can use it to access the Google API.\nvar token=result.credential.accessToken;// The signed-in user info.\nvar user=result.user;console.log(user);// ...\n}).catch(function(error){// Handle Errors here.\nvar errorCode=error.code;var errorMessage=error.message;// The email of the user's account used.\nvar email=error.email;// The firebase.auth.AuthCredential type that was used.\nvar credential=error.credential;// ...\n});alert('Test');}},{key:\"render\",value:function render(){return React.createElement(\"form\",{onSubmit:this.handleSubmit},React.createElement(\"label\",null,\"Username:\",React.createElement(\"input\",{type:\"text\",value:this.state.username,onChange:this.handleChangeUsername})),React.createElement(\"label\",null,\"Password:\",React.createElement(\"input\",{type:\"password\",value:this.state.password,onChange:this.handleChangePassword})),React.createElement(\"input\",{type:\"submit\",value:\"Submit\"}));}}]);return Login;}(React.Component);export default Login;","map":{"version":3,"sources":["/Users/cj/fork-u/src/modules/Login.js"],"names":["React","Firebase","Login","props","state","username","password","isNew","handleChangeUsername","bind","handleChangePassword","handleSubmit","event","setState","target","value","provider","auth","GoogleAuthProvider","alert","signInWithPopup","then","result","token","credential","accessToken","user","console","log","catch","error","errorCode","code","errorMessage","message","email","Component"],"mappings":"gnBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,UAArB,C,GAEMC,CAAAA,K,2EACF,eAAYC,KAAZ,CAAmB,uCACf,uEAAMA,KAAN,GACA,MAAKC,KAAL,CAAa,CACTC,QAAQ,CAAE,EADD,CAETC,QAAQ,CAAE,EAFD,CAGTC,KAAK,CAAE,KAHE,CAAb,CAMA,MAAKC,oBAAL,CAA4B,MAAKA,oBAAL,CAA0BC,IAA1B,+BAA5B,CACA,MAAKC,oBAAL,CAA4B,MAAKA,oBAAL,CAA0BD,IAA1B,+BAA5B,CACA,MAAKE,YAAL,CAAoB,MAAKA,YAAL,CAAkBF,IAAlB,+BAApB,CAVe,aAWlB,C,oFAEoBG,K,CAAO,CACxB,KAAKC,QAAL,CAAc,CAACR,QAAQ,CAAEO,KAAK,CAACE,MAAN,CAAaC,KAAxB,CAAd,EACH,C,kEAEoBH,K,CAAO,CACxB,KAAKC,QAAL,CAAc,CAACP,QAAQ,CAAEM,KAAK,CAACE,MAAN,CAAaC,KAAxB,CAAd,EACH,C,kDAEYH,K,CAAO,CAChB,GAAII,CAAAA,QAAQ,CAAG,GAAIf,CAAAA,QAAQ,CAACgB,IAAT,CAAcC,kBAAlB,EAAf,CACAC,KAAK,CAAC,MAAD,CAAL,CACAlB,QAAQ,CAACgB,IAAT,GAAgBG,eAAhB,CAAgCJ,QAAhC,EAA0CK,IAA1C,CAA+C,SAASC,MAAT,CAAiB,CAC5D;AACA,GAAIC,CAAAA,KAAK,CAAGD,MAAM,CAACE,UAAP,CAAkBC,WAA9B,CACA;AACA,GAAIC,CAAAA,IAAI,CAAGJ,MAAM,CAACI,IAAlB,CAEAC,OAAO,CAACC,GAAR,CAAYF,IAAZ,EACA;AACD,CARH,EAQKG,KARL,CAQW,SAASC,KAAT,CAAgB,CACvB;AACA,GAAIC,CAAAA,SAAS,CAAGD,KAAK,CAACE,IAAtB,CACA,GAAIC,CAAAA,YAAY,CAAGH,KAAK,CAACI,OAAzB,CACA;AACA,GAAIC,CAAAA,KAAK,CAAGL,KAAK,CAACK,KAAlB,CACA;AACA,GAAIX,CAAAA,UAAU,CAAGM,KAAK,CAACN,UAAvB,CACA;AACD,CAjBH,EAkBAL,KAAK,CAAC,MAAD,CAAL,CACH,C,uCAEQ,CACL,MACA,6BAAM,QAAQ,CAAE,KAAKR,YAArB,EACI,6CAEI,6BAAO,IAAI,CAAC,MAAZ,CAAmB,KAAK,CAAE,KAAKP,KAAL,CAAWC,QAArC,CAA+C,QAAQ,CAAE,KAAKG,oBAA9D,EAFJ,CADJ,CAKI,6CAEI,6BAAO,IAAI,CAAC,UAAZ,CAAuB,KAAK,CAAE,KAAKJ,KAAL,CAAWE,QAAzC,CAAmD,QAAQ,CAAE,KAAKI,oBAAlE,EAFJ,CALJ,CASI,6BAAO,IAAI,CAAC,QAAZ,CAAqB,KAAK,CAAC,QAA3B,EATJ,CADA,CAaH,C,mBA5DeV,KAAK,CAACoC,S,EA+D1B,cAAelC,CAAAA,KAAf","sourcesContent":["import React from 'react';\nimport Firebase from 'firebase'\n\nclass Login extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            username: '',\n            password: '',\n            isNew: false\n        }\n\n        this.handleChangeUsername = this.handleChangeUsername.bind(this)\n        this.handleChangePassword = this.handleChangePassword.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n    }\n\n    handleChangeUsername(event) {\n        this.setState({username: event.target.value});\n    }\n\n    handleChangePassword(event) {\n        this.setState({password: event.target.value});\n    }\n\n    handleSubmit(event) {\n        var provider = new Firebase.auth.GoogleAuthProvider();\n        alert(\"Test\")\n        Firebase.auth().signInWithPopup(provider).then(function(result) {\n            // This gives you a Google Access Token. You can use it to access the Google API.\n            var token = result.credential.accessToken;\n            // The signed-in user info.\n            var user = result.user;\n\n            console.log(user)\n            // ...\n          }).catch(function(error) {\n            // Handle Errors here.\n            var errorCode = error.code;\n            var errorMessage = error.message;\n            // The email of the user's account used.\n            var email = error.email;\n            // The firebase.auth.AuthCredential type that was used.\n            var credential = error.credential;\n            // ...\n          });\n        alert('Test')\n    }\n\n    render() {\n        return (\n        <form onSubmit={this.handleSubmit}>\n            <label>\n                Username:\n                <input type=\"text\" value={this.state.username} onChange={this.handleChangeUsername} />\n            </label>\n            <label>\n                Password:\n                <input type=\"password\" value={this.state.password} onChange={this.handleChangePassword} />\n            </label>\n            <input type=\"submit\" value=\"Submit\" />\n        </form>\n        )\n    }\n}\n\nexport default Login"]},"metadata":{},"sourceType":"module"}