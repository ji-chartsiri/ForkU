{"ast":null,"code":"var _jsxFileName = \"/Users/cj/fork-u/src/modules/Header.js\";\nimport React from 'react';\nimport firebase from 'firebase';\nimport { createMuiTheme, withStyles, makeStyles, ThemeProvider } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { green, purple } from '@material-ui/core/colors';\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props);\n    const BootstrapButton = withStyles({\n      root: {\n        boxShadow: 'none',\n        textTransform: 'none',\n        fontSize: 16,\n        padding: '6px 12px',\n        border: '1px solid',\n        lineHeight: 1.5,\n        backgroundColor: '#007bff',\n        borderColor: '#007bff',\n        fontFamily: ['-apple-system', 'BlinkMacSystemFont', '\"Segoe UI\"', 'Roboto', '\"Helvetica Neue\"', 'Arial', 'sans-serif', '\"Apple Color Emoji\"', '\"Segoe UI Emoji\"', '\"Segoe UI Symbol\"'].join(','),\n        '&:hover': {\n          backgroundColor: '#0069d9',\n          borderColor: '#0062cc',\n          boxShadow: 'none'\n        },\n        '&:active': {\n          boxShadow: 'none',\n          backgroundColor: '#0062cc',\n          borderColor: '#005cbf'\n        },\n        '&:focus': {\n          boxShadow: '0 0 0 0.2rem rgba(0,123,255,.5)'\n        }\n      }\n    })(Button);\n    const ColorButton = withStyles(theme => ({\n      root: {\n        color: theme.palette.getContrastText(purple[500]),\n        backgroundColor: purple[500],\n        '&:hover': {\n          backgroundColor: purple[700]\n        }\n      }\n    }))(Button);\n    this.useStyles = makeStyles(theme => ({\n      margin: {\n        margin: theme.spacing(1)\n      }\n    }));\n    this.theme = createMuiTheme({\n      palette: {\n        primary: green\n      }\n    });\n  }\n\n  render() {\n    const classes = this.useStyles();\n    return React.createElement(\"div\", {\n      className: '',\n      style: {\n        textAlign: 'center',\n        backgroundColor: 'green'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"ForkU\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Welcome \", firebase.auth().currentUser.displayName, \"! You are now signed-in!\"), React.createElement(\"button\", {\n      onClick: () => firebase.auth().signOut(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Sign-out\"), React.createElement(ThemeProvider, {\n      theme: this.theme,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      className: classes.margin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Theme Provider\")));\n  }\n\n}\n\nexport default Header;","map":{"version":3,"sources":["/Users/cj/fork-u/src/modules/Header.js"],"names":["React","firebase","createMuiTheme","withStyles","makeStyles","ThemeProvider","Button","green","purple","Header","Component","constructor","props","BootstrapButton","root","boxShadow","textTransform","fontSize","padding","border","lineHeight","backgroundColor","borderColor","fontFamily","join","ColorButton","theme","color","palette","getContrastText","useStyles","margin","spacing","primary","render","classes","textAlign","auth","currentUser","displayName","signOut"],"mappings":"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","sourcesContent":["import React from 'react'\nimport firebase from 'firebase'\nimport { createMuiTheme, withStyles, makeStyles, ThemeProvider } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport { green, purple } from '@material-ui/core/colors'\n\nclass Header extends React.Component {\n    constructor(props) {\n        super(props)\n        const BootstrapButton = withStyles({\n            root: {\n              boxShadow: 'none',\n              textTransform: 'none',\n              fontSize: 16,\n              padding: '6px 12px',\n              border: '1px solid',\n              lineHeight: 1.5,\n              backgroundColor: '#007bff',\n              borderColor: '#007bff',\n              fontFamily: [\n                '-apple-system',\n                'BlinkMacSystemFont',\n                '\"Segoe UI\"',\n                'Roboto',\n                '\"Helvetica Neue\"',\n                'Arial',\n                'sans-serif',\n                '\"Apple Color Emoji\"',\n                '\"Segoe UI Emoji\"',\n                '\"Segoe UI Symbol\"',\n              ].join(','),\n              '&:hover': {\n                backgroundColor: '#0069d9',\n                borderColor: '#0062cc',\n                boxShadow: 'none',\n              },\n              '&:active': {\n                boxShadow: 'none',\n                backgroundColor: '#0062cc',\n                borderColor: '#005cbf',\n              },\n              '&:focus': {\n                boxShadow: '0 0 0 0.2rem rgba(0,123,255,.5)',\n              },\n            },\n          })(Button);\n          \n          const ColorButton = withStyles(theme => ({\n            root: {\n              color: theme.palette.getContrastText(purple[500]),\n              backgroundColor: purple[500],\n              '&:hover': {\n                backgroundColor: purple[700],\n              },\n            },\n          }))(Button);\n          \n          this.useStyles = makeStyles(theme => ({\n            margin: {\n              margin: theme.spacing(1),\n            },\n          }));\n          \n          this.theme = createMuiTheme({\n            palette: {\n              primary: green,\n            },\n          });\n    }\n\n    render() {\n        const classes = this.useStyles();\n        return (\n            <div \n                className={''}\n                style={{\n                    textAlign: 'center',\n                    backgroundColor: 'green'\n                }}\n            >\n                <h1>ForkU</h1>\n                <p>Welcome {firebase.auth().currentUser.displayName}! You are now signed-in!</p>\n                <button onClick={() => firebase.auth().signOut()}>\n                    Sign-out\n                </button>\n                <ThemeProvider theme={this.theme}>\n        <Button variant=\"contained\" color=\"primary\" className={classes.margin}>\n          Theme Provider\n        </Button>\n      </ThemeProvider>\n            </div>\n        )\n    }\n}\n\nexport default Header"]},"metadata":{},"sourceType":"module"}