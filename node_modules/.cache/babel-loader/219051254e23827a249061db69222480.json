{"ast":null,"code":"var _jsxFileName = \"/Users/cj/fork-u/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport Login from './modules/Login';\nimport firebase from 'firebase';\nimport axios from 'axios';\nconst config = {\n  apiKey: 'AIzaSyAlYM4jI_wDeaYcnzzozsXG1pWyhj0b0hQ',\n  authDomain: 'forku-dc443.firebaseapp.com'\n};\nfirebase.initializeApp(config);\nconst uiConfig = {\n  signInFlow: 'popup',\n  signInOptions: [firebase.auth.GoogleAuthProvider.PROVIDER_ID],\n  callbacks: {\n    signInSuccessWithAuthResult: () => false\n  }\n};\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isSignedIn: false,\n      items: [],\n      requests: [],\n      categories: []\n    };\n    this.updateItems = this.updateItems.bind(this);\n    this.updateRequests = this.updateRequests.bind(this);\n    this.updateCategories = this.updateCategories.bind(this);\n  }\n\n  updateItems() {\n    axios.get(`https://us-central1-forku-dc443.cloudfunctions.net/item/get?username=${firebase.auth().currentUser.email}`).then(result => {\n      this.setState({\n        items: result.data\n      });\n      this.updateCategories();\n    });\n  }\n\n  updateRequests() {\n    axios.get(`https://us-central1-forku-dc443.cloudfunctions.net/request/get?username=${firebase.auth().currentUser.email}`).then(result => {\n      this.setState({\n        requests: result.data\n      });\n      this.updateCategories();\n    });\n  }\n\n  updateCategories() {\n    axios.get(`https://us-central1-forku-dc443.cloudfunctions.net/category/get`).then(result => {\n      this.setState({\n        categories: result.data\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.unregisterAuthObserver = firebase.auth().onAuthStateChanged(user => {\n      this.setState({\n        isSignedIn: !!user\n      });\n\n      if (this.state.isSignedIn) {\n        axios.get(`https://us-central1-forku-dc443.cloudfunctions.net/user/check?username=${user.email}&name=${user.displayName}`).then(() => {\n          return axios.get(`https://us-central1-forku-dc443.cloudfunctions.net/item/get?username=${firebase.auth().currentUser.email}`);\n        }).then(result => {\n          this.setState({\n            items: result.data\n          });\n          return axios.get(`https://us-central1-forku-dc443.cloudfunctions.net/request/get?username=${firebase.auth().currentUser.email}`);\n        }).then(result2 => {\n          this.setState({\n            requests: result2.data\n          });\n          return axios.get(`https://us-central1-forku-dc443.cloudfunctions.net/category/get`);\n        }).then(result3 => {\n          this.setState({\n            categories: result3\n          });\n        });\n      } else {\n        this.setState({\n          items: [],\n          requests: []\n        });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.unregisterAuthObserver();\n  }\n\n  render() {\n    console.log(this.state.categories);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(Login, {\n      config: config,\n      uiConfig: uiConfig,\n      isSignedIn: this.state.isSignedIn,\n      items: this.state.items,\n      requests: this.state.requests,\n      categories: this.state.categories,\n      updateItems: this.updateItems,\n      updateRequests: this.updateRequests,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/cj/fork-u/src/App.js"],"names":["React","Login","firebase","axios","config","apiKey","authDomain","initializeApp","uiConfig","signInFlow","signInOptions","auth","GoogleAuthProvider","PROVIDER_ID","callbacks","signInSuccessWithAuthResult","App","Component","constructor","props","state","isSignedIn","items","requests","categories","updateItems","bind","updateRequests","updateCategories","get","currentUser","email","then","result","setState","data","componentDidMount","unregisterAuthObserver","onAuthStateChanged","user","displayName","result2","result3","componentWillUnmount","render","console","log"],"mappings":"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","sourcesContent":["import React from 'react'\nimport './App.css'\nimport Login from './modules/Login'\nimport firebase from 'firebase'\nimport axios from 'axios'\n\nconst config = {\n  apiKey: 'AIzaSyAlYM4jI_wDeaYcnzzozsXG1pWyhj0b0hQ',\n  authDomain: 'forku-dc443.firebaseapp.com'\n}\nfirebase.initializeApp(config)\n\nconst uiConfig = {\n  signInFlow: 'popup',\n  signInOptions: [\n    firebase.auth.GoogleAuthProvider.PROVIDER_ID\n  ],\n  callbacks: {\n    signInSuccessWithAuthResult: () => false\n  }\n};\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      isSignedIn: false,\n      items: [],\n      requests: [],\n      categories: []\n    }\n    this.updateItems = this.updateItems.bind(this)\n    this.updateRequests = this.updateRequests.bind(this)\n    this.updateCategories = this.updateCategories.bind(this)\n  }\n\n  updateItems() {\n    axios.get(`https://us-central1-forku-dc443.cloudfunctions.net/item/get?username=${firebase.auth().currentUser.email}`)\n    .then(result => {\n      this.setState({items: result.data})\n      this.updateCategories()\n    })\n  }\n\n  updateRequests() {\n    axios.get(`https://us-central1-forku-dc443.cloudfunctions.net/request/get?username=${firebase.auth().currentUser.email}`)\n    .then(result => {\n      this.setState({requests: result.data})\n      this.updateCategories()\n    })\n  }\n\n  updateCategories() {\n    axios.get(`https://us-central1-forku-dc443.cloudfunctions.net/category/get`)\n    .then(result => {\n      this.setState({categories: result.data})\n    })\n  }\n\n  componentDidMount() {\n    this.unregisterAuthObserver = firebase.auth().onAuthStateChanged(\n      (user) => {\n        this.setState({isSignedIn: !!user})\n        if (this.state.isSignedIn) {\n          axios.get(`https://us-central1-forku-dc443.cloudfunctions.net/user/check?username=${user.email}&name=${user.displayName}`)\n          .then(() => {\n            return axios.get(`https://us-central1-forku-dc443.cloudfunctions.net/item/get?username=${firebase.auth().currentUser.email}`)\n          }\n          ).then(result => {\n            this.setState({items: result.data})\n            return axios.get(`https://us-central1-forku-dc443.cloudfunctions.net/request/get?username=${firebase.auth().currentUser.email}`)\n          }).then(result2 => {\n            this.setState({requests: result2.data})\n            return axios.get(`https://us-central1-forku-dc443.cloudfunctions.net/category/get`)\n          }).then(result3 => {\n            this.setState({categories: result3})\n          })\n        } else {\n          this.setState({\n            items: [],\n            requests: []\n          })\n        }\n      }\n    );\n  }\n\n  componentWillUnmount() {\n    this.unregisterAuthObserver();\n  } \n\n  render() {\n    console.log(this.state.categories)\n    return (\n      <div>\n        <Login \n          config={config} \n          uiConfig={uiConfig} \n          isSignedIn={this.state.isSignedIn} \n          items={this.state.items}\n          requests={this.state.requests}\n          categories={this.state.categories}\n          updateItems={this.updateItems}\n          updateRequests={this.updateRequests}>\n        </Login>\n      </div>\n    );\n  }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}