{"ast":null,"code":"import _classCallCheck from\"/Users/cj/fork-u/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/cj/fork-u/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/cj/fork-u/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/cj/fork-u/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/cj/fork-u/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import'./App.css';import Login from'./modules/Login';import firebase from'firebase';import axios from'axios';var config={apiKey:'AIzaSyAlYM4jI_wDeaYcnzzozsXG1pWyhj0b0hQ',authDomain:'forku-dc443.firebaseapp.com'};firebase.initializeApp(config);var uiConfig={signInFlow:'popup',signInOptions:[firebase.auth.GoogleAuthProvider.PROVIDER_ID],callbacks:{signInSuccessWithAuthResult:function signInSuccessWithAuthResult(){return false;}}};var App=/*#__PURE__*/function(_React$Component){_inherits(App,_React$Component);function App(props){var _this;_classCallCheck(this,App);_this=_possibleConstructorReturn(this,_getPrototypeOf(App).call(this,props));_this.state={isSignedIn:false};return _this;}_createClass(App,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;this.unregisterAuthObserver=firebase.auth().onAuthStateChanged(function(user){_this2.setState({isSignedIn:!!user});if(_this2.state.isSignedIn){axios.get(\"https://us-central1-forku-dc443.cloudfunctions.net/owner/check?username=\".concat(user.email,\"&name=\").concat(user.displayName));console.log(user);}});}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){this.unregisterAuthObserver();}},{key:\"render\",value:function render(){return React.createElement(\"div\",null,React.createElement(Login,{config:config,uiConfig:uiConfig,isSignedIn:this.state.isSignedIn}));}}]);return App;}(React.Component);export default App;","map":{"version":3,"sources":["/Users/cj/fork-u/src/App.js"],"names":["React","Login","firebase","axios","config","apiKey","authDomain","initializeApp","uiConfig","signInFlow","signInOptions","auth","GoogleAuthProvider","PROVIDER_ID","callbacks","signInSuccessWithAuthResult","App","props","state","isSignedIn","unregisterAuthObserver","onAuthStateChanged","user","setState","get","email","displayName","console","log","Component"],"mappings":"6fAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,WAAP,CACA,MAAOC,CAAAA,KAAP,KAAkB,iBAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,UAArB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CAEA,GAAMC,CAAAA,MAAM,CAAG,CACbC,MAAM,CAAE,yCADK,CAEbC,UAAU,CAAE,6BAFC,CAAf,CAIAJ,QAAQ,CAACK,aAAT,CAAuBH,MAAvB,EAEA,GAAMI,CAAAA,QAAQ,CAAG,CACfC,UAAU,CAAE,OADG,CAEfC,aAAa,CAAE,CACbR,QAAQ,CAACS,IAAT,CAAcC,kBAAd,CAAiCC,WADpB,CAFA,CAKfC,SAAS,CAAE,CACTC,2BAA2B,CAAE,6CAAM,MAAN,EADpB,CALI,CAAjB,C,GAUMC,CAAAA,G,yEACJ,aAAYC,KAAZ,CAAmB,qCACjB,qEAAMA,KAAN,GACA,MAAKC,KAAL,CAAa,CACXC,UAAU,CAAE,KADD,CAAb,CAFiB,aAKlB,C,6EAEmB,iBAClB,KAAKC,sBAAL,CAA8BlB,QAAQ,CAACS,IAAT,GAAgBU,kBAAhB,CAC5B,SAACC,IAAD,CAAU,CACR,MAAI,CAACC,QAAL,CAAc,CAACJ,UAAU,CAAE,CAAC,CAACG,IAAf,CAAd,EACA,GAAI,MAAI,CAACJ,KAAL,CAAWC,UAAf,CAA2B,CACzBhB,KAAK,CAACqB,GAAN,mFAAqFF,IAAI,CAACG,KAA1F,kBAAwGH,IAAI,CAACI,WAA7G,GACAC,OAAO,CAACC,GAAR,CAAYN,IAAZ,EACD,CACF,CAP2B,CAA9B,CASD,C,mEAEsB,CACrB,KAAKF,sBAAL,GACD,C,uCAEQ,CACP,MACE,gCACE,oBAAC,KAAD,EAAO,MAAM,CAAEhB,MAAf,CAAuB,QAAQ,CAAEI,QAAjC,CAA2C,UAAU,CAAE,KAAKU,KAAL,CAAWC,UAAlE,EADF,CADF,CAKD,C,iBA9BenB,KAAK,CAAC6B,S,EAiCxB,cAAeb,CAAAA,GAAf","sourcesContent":["import React from 'react'\nimport './App.css'\nimport Login from './modules/Login'\nimport firebase from 'firebase'\nimport axios from 'axios'\n\nconst config = {\n  apiKey: 'AIzaSyAlYM4jI_wDeaYcnzzozsXG1pWyhj0b0hQ',\n  authDomain: 'forku-dc443.firebaseapp.com'\n}\nfirebase.initializeApp(config)\n\nconst uiConfig = {\n  signInFlow: 'popup',\n  signInOptions: [\n    firebase.auth.GoogleAuthProvider.PROVIDER_ID\n  ],\n  callbacks: {\n    signInSuccessWithAuthResult: () => false\n  }\n};\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      isSignedIn: false\n    }\n  }\n\n  componentDidMount() {\n    this.unregisterAuthObserver = firebase.auth().onAuthStateChanged(\n      (user) => {\n        this.setState({isSignedIn: !!user})\n        if (this.state.isSignedIn) {\n          axios.get(`https://us-central1-forku-dc443.cloudfunctions.net/owner/check?username=${user.email}&name=${user.displayName}`)\n          console.log(user)\n        }\n      }\n    );\n  }\n\n  componentWillUnmount() {\n    this.unregisterAuthObserver();\n  } \n\n  render() {\n    return (\n      <div>\n        <Login config={config} uiConfig={uiConfig} isSignedIn={this.state.isSignedIn}></Login>\n      </div>\n    );\n  }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}